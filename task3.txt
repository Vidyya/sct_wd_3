<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tic-Tac-Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
      background-color: #282c34;
      color: white;
    }
    h1 {
      margin-bottom: 20px;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 10px;
    }
    .cell {
      background-color: #444;
      border-radius: 8px;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 2.5rem;
      cursor: pointer;
      user-select: none;
      transition: background-color 0.3s;
    }
    .cell:hover {
      background-color: #666;
    }
    .status {
      margin-top: 20px;
      font-size: 1.2rem;
    }
  </style>
</head>
<body>
  <h1>Tic-Tac-Toe</h1>
  <div class="board" id="board">
    <div class="cell" data-index="0"></div>
    <div class="cell" data-index="1"></div>
    <div class="cell" data-index="2"></div>
    <div class="cell" data-index="3"></div>
    <div class="cell" data-index="4"></div>
    <div class="cell" data-index="5"></div>
    <div class="cell" data-index="6"></div>
    <div class="cell" data-index="7"></div>
    <div class="cell" data-index="8"></div>
  </div>
  <div class="status" id="status">Current Turn: X</div>

  <script>
    const board = document.getElementById('board');
    const status = document.getElementById('status');
    let boardState = ['', '', '', '', '', '', '', '', ''];
    let currentPlayer = 'X';
    let gameActive = true;

    function checkWin() {
      const winningConditions = [
        [0,1,2],[3,4,5],[6,7,8], // rows
        [0,3,6],[1,4,7],[2,5,8], // columns
        [0,4,8],[2,4,6]          // diagonals
      ];

      for(let condition of winningConditions) {
        const [a, b, c] = condition;
        if (
          boardState[a] && 
          boardState[a] === boardState[b] && 
          boardState[b] === boardState[c]
        ) {
          return boardState[a];  // Return the winner ('X' or 'O')
        }
      }
      return boardState.includes('') ? null : 'Draw';
    }

    function handleClick(event) {
      const cell = event.target;
      const index = cell.getAttribute('data-index');

      if (boardState[index] !== '' || !gameActive) {
        return;
      }

      boardState[index] = currentPlayer;
      cell.textContent = currentPlayer;

      const result = checkWin();

      if(result === 'X' || result === 'O') {
        status.textContent = Player ${result} wins!;
        gameActive = false;
      } else if(result === 'Draw') {
        status.textContent = "It's a draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        status.textContent = Current Turn: ${currentPlayer};
      }
    }

    board.addEventListener('click', handleClick);
  </script>
</body>
</html>